"use strict";var e=require("webpack"),s=require("webpack-sources"),t=require("fs"),a=require("path");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=r(e),i=r(t),n=r(a),u="lib/esm/index.js",l="/Users/liudong/Desktop/github/swap/packages/swap/config";const d=n.default.resolve(l,"../","node_modules/@swap/sw/lib","swapSW.js");var c={SERVICE_WORKER_SOURCE_PATH:d,SERVICE_WORKER_BUILD_PATH:n.default.resolve(l,"../",n.default.dirname(u),n.default.basename(d))};module.exports=class{constructor(e="",t=n.default.basename(c.SERVICE_WORKER_BUILD_PATH)){this.addAssets=e=>{const t=i.default.readFileSync(n.default.resolve(this.swPath));e.emitAsset(this.swName,new s.RawSource(t.toString()))},this.swName=t,this.swPath=this.searchWorkerPath(e)}searchWorkerPath(e){if(e)return n.default.resolve(e);const s=n.default.resolve(__dirname,`../${n.default.dirname(u)}`,this.swName);if(i.default.existsSync(s))return s;throw new Error("ServiceWorker File Not Found")}apply(s){if(e.version.startsWith("4."))s.hooks.emit.tap(this.constructor.name,(e=>this.addAssets(e)));else{const{PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER:e}=o.default.Compilation;s.hooks.thisCompilation.tap(this.constructor.name,(s=>{s.hooks.processAssets.tap({name:this.constructor.name,stage:e-10},(()=>this.addAssets(s)))}))}}};

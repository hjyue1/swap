"use strict";var e=require("webpack"),s=require("webpack-sources"),t=require("fs"),a=require("path");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=r(e),o=r(t),l=r(a),u="lib/esm/index.js",d="/Users/liudong/Desktop/github/swap/packages/swap/config";const n=l.default.resolve(d,"../","node_modules/rocket-swap-sw/lib","swapSW.js");var h={SERVICE_WORKER_SOURCE_PATH:n,SERVICE_WORKER_BUILD_PATH:l.default.resolve(d,"../",l.default.dirname(u),l.default.basename(n))};module.exports=class{constructor(e="",t=l.default.basename(h.SERVICE_WORKER_BUILD_PATH)){this.addAssets=e=>{const t=o.default.readFileSync(l.default.resolve(this.swPath));e.emitAsset(this.swName,new s.RawSource(t.toString()))},this.swName=t,this.swPath=this.searchWorkerPath(e)}searchWorkerPath(e){if(e)return l.default.resolve(e);const s=l.default.resolve(__dirname,`../${l.default.dirname(u)}`,this.swName);if(o.default.existsSync(s))return s;throw new Error("ServiceWorker File Not Found")}apply(s){if(e.version.startsWith("4."))s.hooks.emit.tap(this.swName,(e=>this.addAssets(e)));else{const{PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER:e}=i.default.Compilation;s.hooks.thisCompilation.tap(this.swName,(s=>{s.hooks.processAssets.tap({name:this.swName,stage:e-10},(()=>this.addAssets(s)))}))}}};
